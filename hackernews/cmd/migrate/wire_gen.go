// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gocopper/copper"
	"github.com/gocopper/copper/csql"
	"github.com/gocopper/examples/hackernews/pkg/app"
	"github.com/gocopper/examples/hackernews/pkg/posts"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitMigrator(copperApp *copper.App) (*csql.Migrator, error) {
	lifecycle := copperApp.Lifecycle
	loader := copperApp.Config
	config, err := csql.LoadConfig(loader)
	if err != nil {
		return nil, err
	}
	logger := copperApp.Logger
	db, err := csql.NewDBConnection(lifecycle, config, logger)
	if err != nil {
		return nil, err
	}
	migration := posts.NewMigration(db)
	provideMigrationsParams := app.ProvideMigrationsParams{
		Posts: migration,
	}
	v := app.ProvideMigrations(provideMigrationsParams)
	newMigratorParams := csql.NewMigratorParams{
		Migrations: v,
		Logger:     logger,
	}
	migrator := csql.NewMigrator(newMigratorParams)
	return migrator, nil
}

// wire.go:

var WireModule = wire.NewSet(copper.WireModule, csql.WireModule, app.WireModule, wire.Struct(new(app.ProvideMigrationsParams), "*"), app.ProvideMigrations)
