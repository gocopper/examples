// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gocopper/copper"
	"github.com/gocopper/copper/csql"
	"github.com/gocopper/examples/hackernews/migrations"
	"github.com/google/wire"
)

import (
	_ "github.com/mattn/go-sqlite3"
)

// Injectors from wire.go:

func InitMigrator(app *copper.App) (*csql.Migrator, error) {
	lifecycle := app.Lifecycle
	loader := app.Config
	config, err := csql.LoadConfig(loader)
	if err != nil {
		return nil, err
	}
	logger := app.Logger
	db, err := csql.NewDBConnection(lifecycle, config, logger)
	if err != nil {
		return nil, err
	}
	migrations := _wireMigrationsValue
	newMigratorParams := csql.NewMigratorParams{
		DB:         db,
		Migrations: migrations,
		Config:     config,
		Logger:     logger,
	}
	migrator := csql.NewMigrator(newMigratorParams)
	return migrator, nil
}

var (
	_wireMigrationsValue = csql.Migrations(migrations.Migrations)
)

// wire.go:

var WireModule = wire.NewSet(copper.WireModule, csql.WireModule, wire.Value(csql.Migrations(migrations.Migrations)))
